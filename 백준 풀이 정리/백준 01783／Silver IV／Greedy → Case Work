// https://www.acmicpc.net/problem/1783

// Greedy Algorithm을 이용한 풀이
// 조건의 N과 M의 크기가 2,000,000,000인 것으로 보아 Brute-Force Algorithm은 사용할 수 없다.
#include <iostream>

using namespace std;

int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int n, m;
	cin >> n >> m;								// n은 높이, m은 너비
	if (n == 1)									// 높이가 1인 경우, 본래 위치에만 있을 수 있으므로 1을 출력
	{
		cout << 1;
	}
	else if (n == 2)							// 높이가 2인 경우, 최대 4개의 칸(m이 7일 때 최대), 가로가 그보다 작을 경우에는 y=(x+1)/2에 따라 (m+1)/2를 출력
	{
		cout << min(4, (m + 1) / 2);
	}
	else if (n >= 3)
	{
		if (m <= 6)								// 높이가 3 이상이고, m이 6보다 작거나 같은 경우에는 최대 4개 칸을 방문할 수 있음
		{
			cout << min(4, m);
		}
		else									/* 높이가 3 이상이고, m이 6보다 클 경우에는 7까지 4가지 방법을 모두 사용하고, 이후에 가로 1칸 당 방문을 1회 늘릴 수 있으므로
												   y=x-2에 따라 m-2를 출력 */ 
		{
			cout << m - 2;
		}
	}
}
