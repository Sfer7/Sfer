// https://www.acmicpc.net/problem/1701

// KMP의 Failure 함수를 활용한 풀이
#include <iostream>
#include <vector>

using namespace std;

vector <int> fail(string pt)
{
	vector <int> table;
	table.resize(pt.size(), 0);
	int j = 0;
	for (int i = 1; i < pt.size(); i++)
	{
		while (j > 0 && pt[i] != pt[j])
		{
			j = table[j - 1];
		}
		if (pt[i] == pt[j])
		{
			table[i] = ++j;
		}
	}
	return table;
}

int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(0);

	int ans = 0;
	string x;
	cin >> x;
	for (int i = 0; i < x.size(); i++)				/* 중간부터 시작되는 글자도 찾아야 하기 때문에 이중 for문으로 substr하여 앞자리를 줄여줌.
									   (첫 시도 : fail함수를 앞에서 오는 것과 뒤에서 오는 것을 둘 다 구현하였다가 TLE 발생) */
	{
		vector <int> table = fail(x.substr(i, x.size()));
		for (int j = 0; j < table.size(); j++)
		{
			ans = max(ans, table[j]);
		}
	}
	cout << ans;
}
